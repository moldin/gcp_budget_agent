---
description: 
globs: 
alwaysApply: false
---
# Development Guide

## Environment Setup

### Prerequisites
- Python 3.10
- uv package manager
- Google Cloud Account
- Google Workspace Account with admin privileges

### Local Development Setup
1. Create and activate virtual environment:
```bash
uv venv
source .venv/bin/activate
```

2. Install dependencies:
```bash
uv pip install -e .
```

3. Configure environment variables in `.env`:
```dotenv
GOOGLE_CLOUD_PROJECT="your-gcp-project-id"
GOOGLE_CLOUD_LOCATION="us-central1"
GOOGLE_CLOUD_STAGING_BUCKET="gs://your-gcp-staging-bucket-name"
```

4. Set up Google Cloud authentication:
```bash
gcloud auth application-default login
```

### Gmail Integration Setup
1. Create service account in GCP Console
2. Enable Domain-Wide Delegation
3. Place service account key in `credentials/` directory
4. Configure `gmail_agent/tools.py` with correct paths and email

## Running the Agent

### Local Development
```bash
adk run transaction_categorizer
```

### Remote Deployment
```bash
# Create deployment
deploy-remote --create

# List deployments
deploy-remote --list

# Create session
deploy-remote --create_session --resource_id <resource_id>

# Send message
deploy-remote --send --resource_id <resource_id> --session_id <session_id> --message "Your message"
```

## Code Style
- Follow PEP 8 guidelines
- Use type hints
- Document functions and classes
- Keep configuration in `.env` and `config.py`
